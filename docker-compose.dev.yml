services:
  # PostgreSQL Database (same as production)
  postgres:
    image: postgres:15-alpine
    container_name: brands_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: brands_db
      POSTGRES_USER: brands_user
      POSTGRES_PASSWORD: brands_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - brands_network_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U brands_user -d brands_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend (development with hot reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: brands_backend_dev
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://brands_user:brands_password@postgres:5432/brands_db
      - API_KEY=super-secret-key-123
      - ENVIRONMENT=development
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - brands_network_dev
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend (development with hot reload)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: brands_frontend_dev
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8000/api/v1
      - NEXT_PUBLIC_API_KEY=super-secret-key-123
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3001:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - brands_network_dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data_dev:
    driver: local

networks:
  brands_network_dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
